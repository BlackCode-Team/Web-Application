<?php

namespace ContainerKxOvKpE;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_UG_IX4VService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.uG.iX4V' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.uG.iX4V'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'entityManager' => ['privates', '.errored.EFPCAEJ', NULL, 'Cannot determine controller argument for "App\\Controller\\UtilisateurController::edit()": the $entityManager argument is type-hinted with the non-existent class or interface: "App\\Controller\\EntityManagerInterface". Did you forget to add a use statement?'],
            'utilisateur' => ['privates', '.errored..service_locator.uG.iX4V.App\\Entity\\Utilisateur', NULL, 'Cannot autowire service ".service_locator.uG.iX4V": it references class "App\\Entity\\Utilisateur" but no such service exists.'],
            'utilisateurRepository' => ['privates', 'App\\Repository\\UtilisateurRepository', 'getUtilisateurRepositoryService', true],
        ], [
            'entityManager' => '?',
            'utilisateur' => 'App\\Entity\\Utilisateur',
            'utilisateurRepository' => 'App\\Repository\\UtilisateurRepository',
        ]);
    }
}
